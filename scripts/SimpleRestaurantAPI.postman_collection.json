{
	"info": {
		"_postman_id": "b06d367b-4094-4992-9e0d-53e738df6ebd",
		"name": "SimpleRestaurantAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/menus",
			"item": [
				{
					"name": "POST /menus",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"const id = responseJson.id;\r",
									"pm.globals.set(\"menuId\", id);\r",
									"pm.test(\"Response test\", function () {\r",
									"    pm.expect(pm.globals.get(\"menuId\")).to.equal(id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"status\": \"active\",\r\n    \"name\": \"Hors-d'oeuvre / Appetiser\",\r\n    \"preparation_time\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/menus/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"menus",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /menus",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"const id = responseJson.menus[0].id;\r",
									"pm.globals.set(\"menuId\", id);\r",
									"pm.test(\"Response test\", function () {\r",
									"    pm.expect(pm.globals.get(\"menuId\")).to.equal(id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/menus",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"menus"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /menus/:id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/menus/{{menuId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"menus",
								"{{menuId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "/orders",
			"item": [
				{
					"name": "POST /orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"const id = responseJson.id;\r",
									"pm.globals.set(\"orderId\", id);\r",
									"pm.test(\"Response test\", function () {\r",
									"    pm.expect(pm.globals.get(\"orderId\")).to.equal(id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.globals.set('randomNumber', Math.floor(\r",
									"    Math.random() * (pm.globals.get(\"table_count\") || 10))+1);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"table_id\": \"{{randomNumber}}\",\r\n    \"menu_id\": \"{{menuId}}\",\r\n    \"quantity\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /orders/:id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/orders/{{orderId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"orders",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /orders/:id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/orders/{{orderId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"orders",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /orders",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT /orders",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"table_id\": \"{{tableId}}\",\r\n    \"menu_id\": \"{{menuId}}\",\r\n    \"quantity\": 1,\r\n    \"state\": \"SERVED\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/orders/{{orderId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"orders",
								"{{orderId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "/config",
			"item": [
				{
					"name": "PUT /config",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const requestJson = JSON.parse(pm.request.body);\r",
									"const count = requestJson.table_count;\r",
									"pm.globals.set(\"table_count\", count);\r",
									"pm.test(\"Request test\", function () {\r",
									"    pm.expect(pm.globals.get(\"table_count\")).to.equal(count);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"table_count\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/config",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"config"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}